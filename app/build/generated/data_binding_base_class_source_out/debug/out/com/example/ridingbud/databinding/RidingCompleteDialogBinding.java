// Generated by view binder compiler. Do not edit!
package com.example.ridingbud.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ridingbud.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RidingCompleteDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView courseDivider;

  @NonNull
  public final ConstraintLayout courseEndingBox;

  @NonNull
  public final TextView courseEndingInfo;

  @NonNull
  public final TextView courseEndingMark;

  @NonNull
  public final ConstraintLayout courseInfo;

  @NonNull
  public final ConstraintLayout courseStartingBox;

  @NonNull
  public final TextView courseStartingInfo;

  @NonNull
  public final TextView courseStartingMark;

  @NonNull
  public final TextView distance;

  @NonNull
  public final TextView distancePrecent;

  @NonNull
  public final ProgressBar distanceProgress;

  @NonNull
  public final Button homeBtn;

  @NonNull
  public final Button reviewBtn;

  @NonNull
  public final TextView ridingCompleteTitle;

  @NonNull
  public final ConstraintLayout ridingDistanceInfo;

  @NonNull
  public final TextView ridingDistanceTitle;

  @NonNull
  public final TextView ridingTimeTitle;

  @NonNull
  public final TextView time;

  private RidingCompleteDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView courseDivider, @NonNull ConstraintLayout courseEndingBox,
      @NonNull TextView courseEndingInfo, @NonNull TextView courseEndingMark,
      @NonNull ConstraintLayout courseInfo, @NonNull ConstraintLayout courseStartingBox,
      @NonNull TextView courseStartingInfo, @NonNull TextView courseStartingMark,
      @NonNull TextView distance, @NonNull TextView distancePrecent,
      @NonNull ProgressBar distanceProgress, @NonNull Button homeBtn, @NonNull Button reviewBtn,
      @NonNull TextView ridingCompleteTitle, @NonNull ConstraintLayout ridingDistanceInfo,
      @NonNull TextView ridingDistanceTitle, @NonNull TextView ridingTimeTitle,
      @NonNull TextView time) {
    this.rootView = rootView;
    this.courseDivider = courseDivider;
    this.courseEndingBox = courseEndingBox;
    this.courseEndingInfo = courseEndingInfo;
    this.courseEndingMark = courseEndingMark;
    this.courseInfo = courseInfo;
    this.courseStartingBox = courseStartingBox;
    this.courseStartingInfo = courseStartingInfo;
    this.courseStartingMark = courseStartingMark;
    this.distance = distance;
    this.distancePrecent = distancePrecent;
    this.distanceProgress = distanceProgress;
    this.homeBtn = homeBtn;
    this.reviewBtn = reviewBtn;
    this.ridingCompleteTitle = ridingCompleteTitle;
    this.ridingDistanceInfo = ridingDistanceInfo;
    this.ridingDistanceTitle = ridingDistanceTitle;
    this.ridingTimeTitle = ridingTimeTitle;
    this.time = time;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RidingCompleteDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RidingCompleteDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.riding_complete_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RidingCompleteDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.course_divider;
      TextView courseDivider = ViewBindings.findChildViewById(rootView, id);
      if (courseDivider == null) {
        break missingId;
      }

      id = R.id.course_ending_box;
      ConstraintLayout courseEndingBox = ViewBindings.findChildViewById(rootView, id);
      if (courseEndingBox == null) {
        break missingId;
      }

      id = R.id.course_ending_info;
      TextView courseEndingInfo = ViewBindings.findChildViewById(rootView, id);
      if (courseEndingInfo == null) {
        break missingId;
      }

      id = R.id.course_ending_mark;
      TextView courseEndingMark = ViewBindings.findChildViewById(rootView, id);
      if (courseEndingMark == null) {
        break missingId;
      }

      id = R.id.course_info;
      ConstraintLayout courseInfo = ViewBindings.findChildViewById(rootView, id);
      if (courseInfo == null) {
        break missingId;
      }

      id = R.id.course_starting_box;
      ConstraintLayout courseStartingBox = ViewBindings.findChildViewById(rootView, id);
      if (courseStartingBox == null) {
        break missingId;
      }

      id = R.id.course_starting_info;
      TextView courseStartingInfo = ViewBindings.findChildViewById(rootView, id);
      if (courseStartingInfo == null) {
        break missingId;
      }

      id = R.id.course_starting_mark;
      TextView courseStartingMark = ViewBindings.findChildViewById(rootView, id);
      if (courseStartingMark == null) {
        break missingId;
      }

      id = R.id.distance;
      TextView distance = ViewBindings.findChildViewById(rootView, id);
      if (distance == null) {
        break missingId;
      }

      id = R.id.distance_precent;
      TextView distancePrecent = ViewBindings.findChildViewById(rootView, id);
      if (distancePrecent == null) {
        break missingId;
      }

      id = R.id.distance_progress;
      ProgressBar distanceProgress = ViewBindings.findChildViewById(rootView, id);
      if (distanceProgress == null) {
        break missingId;
      }

      id = R.id.home_btn;
      Button homeBtn = ViewBindings.findChildViewById(rootView, id);
      if (homeBtn == null) {
        break missingId;
      }

      id = R.id.review_btn;
      Button reviewBtn = ViewBindings.findChildViewById(rootView, id);
      if (reviewBtn == null) {
        break missingId;
      }

      id = R.id.riding_complete_title;
      TextView ridingCompleteTitle = ViewBindings.findChildViewById(rootView, id);
      if (ridingCompleteTitle == null) {
        break missingId;
      }

      id = R.id.riding_distance_info;
      ConstraintLayout ridingDistanceInfo = ViewBindings.findChildViewById(rootView, id);
      if (ridingDistanceInfo == null) {
        break missingId;
      }

      id = R.id.riding_distance_title;
      TextView ridingDistanceTitle = ViewBindings.findChildViewById(rootView, id);
      if (ridingDistanceTitle == null) {
        break missingId;
      }

      id = R.id.riding_time_title;
      TextView ridingTimeTitle = ViewBindings.findChildViewById(rootView, id);
      if (ridingTimeTitle == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      return new RidingCompleteDialogBinding((ConstraintLayout) rootView, courseDivider,
          courseEndingBox, courseEndingInfo, courseEndingMark, courseInfo, courseStartingBox,
          courseStartingInfo, courseStartingMark, distance, distancePrecent, distanceProgress,
          homeBtn, reviewBtn, ridingCompleteTitle, ridingDistanceInfo, ridingDistanceTitle,
          ridingTimeTitle, time);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
