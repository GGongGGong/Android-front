// Generated by view binder compiler. Do not edit!
package com.example.ridingbud.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ridingbud.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMyReviewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backBtn;

  @NonNull
  public final TextView courseName;

  @NonNull
  public final TextView date;

  @NonNull
  public final ConstraintLayout deleteBtn;

  @NonNull
  public final ImageView deleteImg;

  @NonNull
  public final TextView deleteTitle;

  @NonNull
  public final ConstraintLayout editBtn;

  @NonNull
  public final ImageView editImg;

  @NonNull
  public final TextView editTitle;

  @NonNull
  public final TextView likeNum;

  @NonNull
  public final TextView pageTitle;

  @NonNull
  public final TextView rateNum;

  @NonNull
  public final RatingBar ratingbar;

  @NonNull
  public final ConstraintLayout reviewBox;

  @NonNull
  public final TextView reviewContent;

  private ActivityMyReviewBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton backBtn,
      @NonNull TextView courseName, @NonNull TextView date, @NonNull ConstraintLayout deleteBtn,
      @NonNull ImageView deleteImg, @NonNull TextView deleteTitle,
      @NonNull ConstraintLayout editBtn, @NonNull ImageView editImg, @NonNull TextView editTitle,
      @NonNull TextView likeNum, @NonNull TextView pageTitle, @NonNull TextView rateNum,
      @NonNull RatingBar ratingbar, @NonNull ConstraintLayout reviewBox,
      @NonNull TextView reviewContent) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.courseName = courseName;
    this.date = date;
    this.deleteBtn = deleteBtn;
    this.deleteImg = deleteImg;
    this.deleteTitle = deleteTitle;
    this.editBtn = editBtn;
    this.editImg = editImg;
    this.editTitle = editTitle;
    this.likeNum = likeNum;
    this.pageTitle = pageTitle;
    this.rateNum = rateNum;
    this.ratingbar = ratingbar;
    this.reviewBox = reviewBox;
    this.reviewContent = reviewContent;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMyReviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMyReviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_my_review, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMyReviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_btn;
      ImageButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.course_name;
      TextView courseName = ViewBindings.findChildViewById(rootView, id);
      if (courseName == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.delete_btn;
      ConstraintLayout deleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtn == null) {
        break missingId;
      }

      id = R.id.delete_img;
      ImageView deleteImg = ViewBindings.findChildViewById(rootView, id);
      if (deleteImg == null) {
        break missingId;
      }

      id = R.id.delete_title;
      TextView deleteTitle = ViewBindings.findChildViewById(rootView, id);
      if (deleteTitle == null) {
        break missingId;
      }

      id = R.id.edit_btn;
      ConstraintLayout editBtn = ViewBindings.findChildViewById(rootView, id);
      if (editBtn == null) {
        break missingId;
      }

      id = R.id.edit_img;
      ImageView editImg = ViewBindings.findChildViewById(rootView, id);
      if (editImg == null) {
        break missingId;
      }

      id = R.id.edit_title;
      TextView editTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTitle == null) {
        break missingId;
      }

      id = R.id.like_num;
      TextView likeNum = ViewBindings.findChildViewById(rootView, id);
      if (likeNum == null) {
        break missingId;
      }

      id = R.id.page_title;
      TextView pageTitle = ViewBindings.findChildViewById(rootView, id);
      if (pageTitle == null) {
        break missingId;
      }

      id = R.id.rate_num;
      TextView rateNum = ViewBindings.findChildViewById(rootView, id);
      if (rateNum == null) {
        break missingId;
      }

      id = R.id.ratingbar;
      RatingBar ratingbar = ViewBindings.findChildViewById(rootView, id);
      if (ratingbar == null) {
        break missingId;
      }

      id = R.id.review_box;
      ConstraintLayout reviewBox = ViewBindings.findChildViewById(rootView, id);
      if (reviewBox == null) {
        break missingId;
      }

      id = R.id.review_content;
      TextView reviewContent = ViewBindings.findChildViewById(rootView, id);
      if (reviewContent == null) {
        break missingId;
      }

      return new ActivityMyReviewBinding((ConstraintLayout) rootView, backBtn, courseName, date,
          deleteBtn, deleteImg, deleteTitle, editBtn, editImg, editTitle, likeNum, pageTitle,
          rateNum, ratingbar, reviewBox, reviewContent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
