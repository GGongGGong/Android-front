// Generated by view binder compiler. Do not edit!
package com.example.ridingbud.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ridingbud.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConvenienceBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnCurrentLocation;

  @NonNull
  public final Button btnOption1;

  @NonNull
  public final Button btnOption2;

  @NonNull
  public final LinearLayout buttonContainer;

  @NonNull
  public final FrameLayout mapViewContainer;

  private ActivityConvenienceBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnCurrentLocation, @NonNull Button btnOption1, @NonNull Button btnOption2,
      @NonNull LinearLayout buttonContainer, @NonNull FrameLayout mapViewContainer) {
    this.rootView = rootView;
    this.btnCurrentLocation = btnCurrentLocation;
    this.btnOption1 = btnOption1;
    this.btnOption2 = btnOption2;
    this.buttonContainer = buttonContainer;
    this.mapViewContainer = mapViewContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConvenienceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConvenienceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_convenience, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConvenienceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCurrentLocation;
      Button btnCurrentLocation = ViewBindings.findChildViewById(rootView, id);
      if (btnCurrentLocation == null) {
        break missingId;
      }

      id = R.id.btnOption1;
      Button btnOption1 = ViewBindings.findChildViewById(rootView, id);
      if (btnOption1 == null) {
        break missingId;
      }

      id = R.id.btnOption2;
      Button btnOption2 = ViewBindings.findChildViewById(rootView, id);
      if (btnOption2 == null) {
        break missingId;
      }

      id = R.id.buttonContainer;
      LinearLayout buttonContainer = ViewBindings.findChildViewById(rootView, id);
      if (buttonContainer == null) {
        break missingId;
      }

      id = R.id.mapViewContainer;
      FrameLayout mapViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (mapViewContainer == null) {
        break missingId;
      }

      return new ActivityConvenienceBinding((ConstraintLayout) rootView, btnCurrentLocation,
          btnOption1, btnOption2, buttonContainer, mapViewContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
