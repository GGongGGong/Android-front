// Generated by view binder compiler. Do not edit!
package com.example.ridingbud.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ridingbud.R;
import com.kakao.vectormap.MapView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRidingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backBtn;

  @NonNull
  public final ConstraintLayout backBtnBox;

  @NonNull
  public final TextView courseInfo;

  @NonNull
  public final RecyclerView courseRv;

  @NonNull
  public final TextView distance;

  @NonNull
  public final ProgressBar distanceProgress;

  @NonNull
  public final TextView distanceText;

  @NonNull
  public final TextView endingMarkerText;

  @NonNull
  public final TextView endingMoveCourseListText;

  @NonNull
  public final ConstraintLayout endingSelectBox;

  @NonNull
  public final ConstraintLayout endingSelectBtn;

  @NonNull
  public final TextView endingSelectText;

  @NonNull
  public final TextView endingText;

  @NonNull
  public final TextView endingTextMark;

  @NonNull
  public final TextView endingTitle;

  @NonNull
  public final TextView infoTitle;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final ConstraintLayout moveStartingSelectBtn;

  @NonNull
  public final ImageButton myLocationBtn;

  @NonNull
  public final ConstraintLayout ridingInfoBox;

  @NonNull
  public final ConstraintLayout startingCourseListBtn;

  @NonNull
  public final TextView startingCourseListText;

  @NonNull
  public final ConstraintLayout startingSelectBox;

  @NonNull
  public final ConstraintLayout startingSelectBtn;

  @NonNull
  public final TextView startingSelectMarkerText;

  @NonNull
  public final TextView startingSelectText;

  @NonNull
  public final TextView startingText;

  @NonNull
  public final TextView startingTextMark;

  @NonNull
  public final TextView startingTitle;

  @NonNull
  public final ConstraintLayout stopBtn;

  @NonNull
  public final TextView stopText;

  @NonNull
  public final TextView time;

  private ActivityRidingBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton backBtn,
      @NonNull ConstraintLayout backBtnBox, @NonNull TextView courseInfo,
      @NonNull RecyclerView courseRv, @NonNull TextView distance,
      @NonNull ProgressBar distanceProgress, @NonNull TextView distanceText,
      @NonNull TextView endingMarkerText, @NonNull TextView endingMoveCourseListText,
      @NonNull ConstraintLayout endingSelectBox, @NonNull ConstraintLayout endingSelectBtn,
      @NonNull TextView endingSelectText, @NonNull TextView endingText,
      @NonNull TextView endingTextMark, @NonNull TextView endingTitle, @NonNull TextView infoTitle,
      @NonNull MapView mapView, @NonNull ConstraintLayout moveStartingSelectBtn,
      @NonNull ImageButton myLocationBtn, @NonNull ConstraintLayout ridingInfoBox,
      @NonNull ConstraintLayout startingCourseListBtn, @NonNull TextView startingCourseListText,
      @NonNull ConstraintLayout startingSelectBox, @NonNull ConstraintLayout startingSelectBtn,
      @NonNull TextView startingSelectMarkerText, @NonNull TextView startingSelectText,
      @NonNull TextView startingText, @NonNull TextView startingTextMark,
      @NonNull TextView startingTitle, @NonNull ConstraintLayout stopBtn,
      @NonNull TextView stopText, @NonNull TextView time) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.backBtnBox = backBtnBox;
    this.courseInfo = courseInfo;
    this.courseRv = courseRv;
    this.distance = distance;
    this.distanceProgress = distanceProgress;
    this.distanceText = distanceText;
    this.endingMarkerText = endingMarkerText;
    this.endingMoveCourseListText = endingMoveCourseListText;
    this.endingSelectBox = endingSelectBox;
    this.endingSelectBtn = endingSelectBtn;
    this.endingSelectText = endingSelectText;
    this.endingText = endingText;
    this.endingTextMark = endingTextMark;
    this.endingTitle = endingTitle;
    this.infoTitle = infoTitle;
    this.mapView = mapView;
    this.moveStartingSelectBtn = moveStartingSelectBtn;
    this.myLocationBtn = myLocationBtn;
    this.ridingInfoBox = ridingInfoBox;
    this.startingCourseListBtn = startingCourseListBtn;
    this.startingCourseListText = startingCourseListText;
    this.startingSelectBox = startingSelectBox;
    this.startingSelectBtn = startingSelectBtn;
    this.startingSelectMarkerText = startingSelectMarkerText;
    this.startingSelectText = startingSelectText;
    this.startingText = startingText;
    this.startingTextMark = startingTextMark;
    this.startingTitle = startingTitle;
    this.stopBtn = stopBtn;
    this.stopText = stopText;
    this.time = time;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRidingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRidingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_riding, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRidingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_btn;
      ImageButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.back_btn_box;
      ConstraintLayout backBtnBox = ViewBindings.findChildViewById(rootView, id);
      if (backBtnBox == null) {
        break missingId;
      }

      id = R.id.course_info;
      TextView courseInfo = ViewBindings.findChildViewById(rootView, id);
      if (courseInfo == null) {
        break missingId;
      }

      id = R.id.course_rv;
      RecyclerView courseRv = ViewBindings.findChildViewById(rootView, id);
      if (courseRv == null) {
        break missingId;
      }

      id = R.id.distance;
      TextView distance = ViewBindings.findChildViewById(rootView, id);
      if (distance == null) {
        break missingId;
      }

      id = R.id.distance_progress;
      ProgressBar distanceProgress = ViewBindings.findChildViewById(rootView, id);
      if (distanceProgress == null) {
        break missingId;
      }

      id = R.id.distance_text;
      TextView distanceText = ViewBindings.findChildViewById(rootView, id);
      if (distanceText == null) {
        break missingId;
      }

      id = R.id.ending_marker_text;
      TextView endingMarkerText = ViewBindings.findChildViewById(rootView, id);
      if (endingMarkerText == null) {
        break missingId;
      }

      id = R.id.ending_move_course_list_text;
      TextView endingMoveCourseListText = ViewBindings.findChildViewById(rootView, id);
      if (endingMoveCourseListText == null) {
        break missingId;
      }

      id = R.id.ending_select_box;
      ConstraintLayout endingSelectBox = ViewBindings.findChildViewById(rootView, id);
      if (endingSelectBox == null) {
        break missingId;
      }

      id = R.id.ending_select_btn;
      ConstraintLayout endingSelectBtn = ViewBindings.findChildViewById(rootView, id);
      if (endingSelectBtn == null) {
        break missingId;
      }

      id = R.id.ending_select_text;
      TextView endingSelectText = ViewBindings.findChildViewById(rootView, id);
      if (endingSelectText == null) {
        break missingId;
      }

      id = R.id.ending_text;
      TextView endingText = ViewBindings.findChildViewById(rootView, id);
      if (endingText == null) {
        break missingId;
      }

      id = R.id.ending_text_mark;
      TextView endingTextMark = ViewBindings.findChildViewById(rootView, id);
      if (endingTextMark == null) {
        break missingId;
      }

      id = R.id.ending_title;
      TextView endingTitle = ViewBindings.findChildViewById(rootView, id);
      if (endingTitle == null) {
        break missingId;
      }

      id = R.id.info_title;
      TextView infoTitle = ViewBindings.findChildViewById(rootView, id);
      if (infoTitle == null) {
        break missingId;
      }

      id = R.id.map_view;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.move_starting_select_btn;
      ConstraintLayout moveStartingSelectBtn = ViewBindings.findChildViewById(rootView, id);
      if (moveStartingSelectBtn == null) {
        break missingId;
      }

      id = R.id.my_location_btn;
      ImageButton myLocationBtn = ViewBindings.findChildViewById(rootView, id);
      if (myLocationBtn == null) {
        break missingId;
      }

      id = R.id.riding_info_box;
      ConstraintLayout ridingInfoBox = ViewBindings.findChildViewById(rootView, id);
      if (ridingInfoBox == null) {
        break missingId;
      }

      id = R.id.starting_course_list_btn;
      ConstraintLayout startingCourseListBtn = ViewBindings.findChildViewById(rootView, id);
      if (startingCourseListBtn == null) {
        break missingId;
      }

      id = R.id.starting_course_list_text;
      TextView startingCourseListText = ViewBindings.findChildViewById(rootView, id);
      if (startingCourseListText == null) {
        break missingId;
      }

      id = R.id.starting_select_box;
      ConstraintLayout startingSelectBox = ViewBindings.findChildViewById(rootView, id);
      if (startingSelectBox == null) {
        break missingId;
      }

      id = R.id.starting_select_btn;
      ConstraintLayout startingSelectBtn = ViewBindings.findChildViewById(rootView, id);
      if (startingSelectBtn == null) {
        break missingId;
      }

      id = R.id.starting_select_marker_text;
      TextView startingSelectMarkerText = ViewBindings.findChildViewById(rootView, id);
      if (startingSelectMarkerText == null) {
        break missingId;
      }

      id = R.id.starting_select_text;
      TextView startingSelectText = ViewBindings.findChildViewById(rootView, id);
      if (startingSelectText == null) {
        break missingId;
      }

      id = R.id.starting_text;
      TextView startingText = ViewBindings.findChildViewById(rootView, id);
      if (startingText == null) {
        break missingId;
      }

      id = R.id.starting_text_mark;
      TextView startingTextMark = ViewBindings.findChildViewById(rootView, id);
      if (startingTextMark == null) {
        break missingId;
      }

      id = R.id.starting_title;
      TextView startingTitle = ViewBindings.findChildViewById(rootView, id);
      if (startingTitle == null) {
        break missingId;
      }

      id = R.id.stop_btn;
      ConstraintLayout stopBtn = ViewBindings.findChildViewById(rootView, id);
      if (stopBtn == null) {
        break missingId;
      }

      id = R.id.stop_text;
      TextView stopText = ViewBindings.findChildViewById(rootView, id);
      if (stopText == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      return new ActivityRidingBinding((ConstraintLayout) rootView, backBtn, backBtnBox, courseInfo,
          courseRv, distance, distanceProgress, distanceText, endingMarkerText,
          endingMoveCourseListText, endingSelectBox, endingSelectBtn, endingSelectText, endingText,
          endingTextMark, endingTitle, infoTitle, mapView, moveStartingSelectBtn, myLocationBtn,
          ridingInfoBox, startingCourseListBtn, startingCourseListText, startingSelectBox,
          startingSelectBtn, startingSelectMarkerText, startingSelectText, startingText,
          startingTextMark, startingTitle, stopBtn, stopText, time);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
