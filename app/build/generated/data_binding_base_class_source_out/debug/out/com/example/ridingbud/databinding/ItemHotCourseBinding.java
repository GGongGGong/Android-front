// Generated by view binder compiler. Do not edit!
package com.example.ridingbud.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ridingbud.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHotCourseBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView courseDistance;

  @NonNull
  public final TextView courseName;

  @NonNull
  public final TextView courseRating;

  @NonNull
  public final TextView courseTime;

  private ItemHotCourseBinding(@NonNull LinearLayout rootView, @NonNull TextView courseDistance,
      @NonNull TextView courseName, @NonNull TextView courseRating, @NonNull TextView courseTime) {
    this.rootView = rootView;
    this.courseDistance = courseDistance;
    this.courseName = courseName;
    this.courseRating = courseRating;
    this.courseTime = courseTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHotCourseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHotCourseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_hot_course, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHotCourseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.course_distance;
      TextView courseDistance = ViewBindings.findChildViewById(rootView, id);
      if (courseDistance == null) {
        break missingId;
      }

      id = R.id.course_name;
      TextView courseName = ViewBindings.findChildViewById(rootView, id);
      if (courseName == null) {
        break missingId;
      }

      id = R.id.course_rating;
      TextView courseRating = ViewBindings.findChildViewById(rootView, id);
      if (courseRating == null) {
        break missingId;
      }

      id = R.id.course_time;
      TextView courseTime = ViewBindings.findChildViewById(rootView, id);
      if (courseTime == null) {
        break missingId;
      }

      return new ItemHotCourseBinding((LinearLayout) rootView, courseDistance, courseName,
          courseRating, courseTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
